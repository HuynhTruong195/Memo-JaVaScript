T·ªïng quan v·ªÅ Javascript
JavaScript l√† m·ªôt ng√¥n ng·ªØ script ƒë∆∞·ª£c d√πng ƒë·ªÉ t·∫°o c√°c script ·ªü m√°y client v√† m√°y server. C√°c script ·ªü m√°y client c√≥ th·ªÉ th·ª±c thi ƒë∆∞·ª£c trong tr√¨nh duy·ªát trong khi c√°c script ·ªü m√°y server l·∫°i th·ª±c hi·ªán tr√™n server.

üß∞  Khai b√°o bi·∫øn
JavaScript cung c·∫•p ba t·ª´ kh√≥a ƒë·ªÉ khai b√°o bi·∫øn:

var (c√°ch c≈©, kh√¥ng khuy·∫øn ngh·ªã trong ES6 tr·ªü l√™n)
let (khuy·∫øn ngh·ªã cho c√°c bi·∫øn c√≥ ph·∫°m vi kh·ªëi)
const (d√πng cho c√°c gi√° tr·ªã kh√¥ng thay ƒë·ªïi)


G√°n gi√° tr·ªã cho bi·∫øn
G√°n gi√° tr·ªã cho bi·∫øn ch√∫ng ta s·∫Ω th·ª±c hi·ªán g√°n t·ª´ b√™n ph·∫£i cho ph√≠a b√™n tr√°i

B·∫°n c√≥ th·ªÉ g√°n gi√° tr·ªã cho bi·∫øn ngay khi khai b√°o:
 let age= 25;

 Ho·∫∑c g√°n gi√° tr·ªã sau khi khai b√°o:

 let age;
 age = 25;

 üß∞ Ki·ªÉu d·ªØ li·ªáu JavaScript
Bi·∫øn JavaScript c√≥ th·ªÉ ch·ª©a c√°c s·ªë nh∆∞ 100 v√† c√°c gi√° tr·ªã vƒÉn b·∫£n nh∆∞ "John Doe".

Trong l·∫≠p tr√¨nh, gi√° tr·ªã vƒÉn b·∫£n ƒë∆∞·ª£c g·ªçi l√† chu·ªói vƒÉn b·∫£n.

JavaScript c√≥ th·ªÉ x·ª≠ l√Ω nhi·ªÅu lo·∫°i d·ªØ li·ªáu, nh∆∞ng hi·ªán t·∫°i, b·∫°n ch·ªâ c·∫ßn nghƒ© ƒë·∫øn s·ªë v√† chu·ªói.

Chu·ªói ƒë∆∞·ª£c vi·∫øt trong d·∫•u ngo·∫∑c k√©p ho·∫∑c d·∫•u ngo·∫∑c ƒë∆°n. S·ªë ƒë∆∞·ª£c vi·∫øt kh√¥ng c√≥ d·∫•u ngo·∫∑c k√©p.

N·∫øu b·∫°n ƒë·∫∑t s·ªë trong d·∫•u ngo·∫∑c k√©p, s·ªë ƒë√≥ s·∫Ω ƒë∆∞·ª£c coi nh∆∞ m·ªôt chu·ªói vƒÉn b·∫£n.
    V√≠ d·ª•
    const pi = 3.14;
    let person = "John Doe";
    let answer = 'Yes I am!';

üß∞   M·ªôt c√¢u l·ªánh, nhi·ªÅu bi·∫øn s·ªë
    B·∫°n c√≥ th·ªÉ khai b√°o nhi·ªÅu bi·∫øn trong m·ªôt c√¢u l·ªánh.
    
    B·∫Øt ƒë·∫ßu c√¢u l·ªánh let v√† ph√¢n t√°ch c√°c bi·∫øn b·∫±ng d·∫•u ph·∫©y :
    V√≠ d·ª•
    let person = "John Doe", carName = "Volvo", price = 200;

üß∞  M·ªôt khai b√°o c√≥ th·ªÉ k√©o d√†i nhi·ªÅu d√≤ng:

    V√≠ d·ª•
    let person = "John Doe",
    carName = "Volvo",
    price = 200;

 üß∞Gi√° tr·ªã = kh√¥ng x√°c ƒë·ªãnh
    Trong c√°c ch∆∞∆°ng tr√¨nh m√°y t√≠nh, c√°c bi·∫øn th∆∞·ªùng ƒë∆∞·ª£c khai b√°o m√† kh√¥ng c√≥ gi√° tr·ªã. Gi√° tr·ªã c√≥ th·ªÉ l√† th·ª© ph·∫£i t√≠nh to√°n ho·∫∑c th·ª© s·∫Ω ƒë∆∞·ª£c cung c·∫•p sau, nh∆∞ d·ªØ li·ªáu ƒë·∫ßu v√†o c·ªßa ng∆∞·ªùi d√πng.
    
    M·ªôt bi·∫øn ƒë∆∞·ª£c khai b√°o m√† kh√¥ng c√≥ gi√° tr·ªã s·∫Ω c√≥ gi√° tr·ªã l√† undefined.
    
    Bi·∫øn carName s·∫Ω c√≥ gi√° tr·ªã undefinedsau khi th·ª±c thi c√¢u l·ªánh n√†y:
    let carName;

 üß∞Khai b√°o l·∫°i c√°c bi·∫øn JavaScript
    N·∫øu b·∫°n khai b√°o l·∫°i m·ªôt bi·∫øn JavaScript ƒë∆∞·ª£c khai b√°o b·∫±ng var, th√¨ n√≥ s·∫Ω kh√¥ng m·∫•t gi√° tr·ªã.
    
    Bi·∫øn carNamev·∫´n c√≥ gi√° tr·ªã "Volvo" sau khi th·ª±c hi·ªán c√°c c√¢u l·ªánh sau:
    V√≠ d·ª•
var carName = "Volvo";
var carName;
 KHI G·ªåI BI·ªÇN CARDNAME V·∫™N HI·ªÜN VOLVO

üß∞Ghi ch√∫
    B·∫°n kh√¥ng th·ªÉ khai b√°o l·∫°i m·ªôt bi·∫øn ƒë∆∞·ª£c khai b√°o b·∫±ng let ho·∫∑c const.

    ƒêi·ªÅu n√†y s·∫Ω kh√¥ng hi·ªáu qu·∫£:

    let carName = "Volvo";
    let carName;

    KHI G·ªåI BI·ªÇN CARDNAME KH√îNG HI·ªÜN VOLVO

üß∞ S·ªë h·ªçc JavaScript
B√äN C·∫†NH X·ª¨ L√ù THEO TO√ÅN ƒê·∫†I S·ªê TH√å JS X·ª¨ L√ù THEO CHU·ªñI + V·ªöI NHAU
    V√≠ d·ª•
    let x = "John" + " " + "Doe"
    k·∫øt qu·∫£: John Doe 
    let x = 5 + 2 + 3;
    k·∫øt qu·∫£  10

    let x = "5" + 2 + 3;
    k·∫øt qu·∫£: 523

    ‚úÖC√°ch JavaScript x·ª≠ l√Ω:
    "5" + 2 ‚Üí Chu·ªói "5" v√† s·ªë 2 ‚áí JavaScript chuy·ªÉn 2 th√†nh chu·ªói "2" v√† th·ª±c hi·ªán n·ªëi chu·ªói ‚Üí K·∫øt qu·∫£ l√† "52".

    "52" + 3 ‚Üí "52" (chu·ªói) v√† 3 (s·ªë) ‚áí JavaScript ti·∫øp t·ª•c chuy·ªÉn 3 th√†nh "3" v√† n·ªëi chu·ªói ‚Üí K·∫øt qu·∫£ cu·ªëi c√πng l√† "523".

    ‚úÖN·∫øu b·∫°n ƒë·∫∑t m·ªôt s·ªë trong d·∫•u ngo·∫∑c k√©p, c√°c s·ªë c√≤n l·∫°i s·∫Ω ƒë∆∞·ª£c coi l√† chu·ªói v√† ƒë∆∞·ª£c n·ªëi l·∫°i.

    let x = 2 + 3 + "5";
    K·∫æT QU·∫¢: 55


 üß∞ D·∫•u ƒë√¥ la JavaScript $
    V√¨ JavaScript coi d·∫•u ƒë√¥ la nh∆∞ m·ªôt ch·ªØ c√°i n√™n c√°c ƒë·ªãnh danh ch·ª©a $ l√† t√™n bi·∫øn h·ª£p l·ªá:

    let $ = "Hello World";
    let $$$ = 2;
    let $myMoney = 5;

    ‚úÖVi·ªác s·ª≠ d·ª•ng k√Ω hi·ªáu ƒë√¥ la kh√¥ng ph·ªï bi·∫øn trong JavaScript, nh∆∞ng c√°c l·∫≠p tr√¨nh vi√™n chuy√™n nghi·ªáp th∆∞·ªùng s·ª≠ d·ª•ng n√≥ nh∆∞ m·ªôt b√≠ danh cho h√†m ch√≠nh trong th∆∞ vi·ªán JavaScript.

    V√≠ d·ª•, trong th∆∞ vi·ªán JavaScript jQuery, h√†m main $ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ ch·ªçn c√°c ph·∫ßn t·ª≠ HTML. Trong jQuery $("p");c√≥ nghƒ©a l√† "ch·ªçn t·∫•t c·∫£ c√°c ph·∫ßn t·ª≠ p".

    ‚úÖD·∫•u g·∫°ch d∆∞·ªõi JavaScript (_)
    V√¨ JavaScript coi d·∫•u g·∫°ch d∆∞·ªõi l√† m·ªôt ch·ªØ c√°i n√™n c√°c ƒë·ªãnh danh ch·ª©a _ l√† t√™n bi·∫øn h·ª£p l·ªá:
    V√≠ d·ª•:
    let _lastName = "Johnson";
    let _x = 2;
    let _100 = 5;


    üß∞ input v√† output  üß∞

 ‚úÖInput trong javascript
Nh·∫≠p d·ªØ li·ªáu b·∫±ng prompt()
H√†m prompt() hi·ªÉn th·ªã h·ªôp tho·∫°i ƒë·ªÉ ng∆∞·ªùi d√πng nh·∫≠p d·ªØ li·ªáu.
D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c t·ª´ prompt() lu√¥n ·ªü d·∫°ng chu·ªói (string).
C√∫ ph√°p:
 let userinput = prompt (" nhap ten cua ban );
 console.log ( "ten cua ban la "  + userinput);


 ‚úÖOutput trong javascript
 Hi·ªÉn th·ªã b·∫±ng console.log()
H√†m console.log() d√πng ƒë·ªÉ ghi d·ªØ li·ªáu ho·∫∑c th√¥ng b√°o v√†o b·∫£ng ƒëi·ªÅu khi·ªÉn (console) c·ªßa tr√¨nh duy·ªát.
ƒê√¢y l√† ph∆∞∆°ng ph√°p ph·ªï bi·∫øn ƒë·ªÉ ki·ªÉm tra l·ªói v√† theo d√µi d·ªØ li·ªáu khi l·∫≠p tr√¨nh.
V√≠ d·ª•:
let name = "Jonh"
console.log ("ten cua ban la") + name;

‚úÖHi·ªÉn th·ªã b·∫±ng document.write()
    H√†m document.write() ghi tr·ª±c ti·∫øp n·ªôi dung v√†o t√†i li·ªáu HTML.
    L∆∞u √Ω: S·ª≠ d·ª•ng document.write() s·∫Ω thay th·∫ø to√†n b·ªô n·ªôi dung c·ªßa trang n·∫øu g·ªçi sau khi trang ƒë√£ t·∫£i.
    V√≠ d·ª•:
    document.write ("<h1> xin chao </h1>");
    K·∫æT QU·∫¢. CH·ªÆ XIN CH√ÄO XU·∫§T HI·ªÜN THAY TH·∫æ CHO N·ªòI DUNG C√ì TRONG TH·∫∫ h1 B√äN HTML

    ‚ùå L∆∞u √Ω quan tr·ªçng
    Kh√¥ng d√πng sau khi trang ƒë√£ t·∫£i xong:
    N·∫øu b·∫°n s·ª≠ d·ª•ng document.write() sau khi trang web ƒë√£ t·∫£i xong (v√≠ d·ª• trong setTimeout() ho·∫∑c sau m·ªôt s·ª± ki·ªán), n√≥ s·∫Ω x√≥a to√†n b·ªô n·ªôi dung trang html

        vd: <script>
        setTimeout(function() {
            document.write("Trang ƒë√£ b·ªã ghi ƒë√®!");
        }, 3000);
        </script>

        üö® K·∫øt qu·∫£: Sau 3 gi√¢y, to√†n b·ªô trang web s·∫Ω b·ªã x√≥a v√† ch·ªâ c√≤n l·∫°i d√≤ng ch·ªØ "Trang ƒë√£ b·ªã ghi ƒë√®!".

        ‚úÖKh√¥ng t·ªët cho c·∫≠p nh·∫≠t ƒë·ªông:
        N·∫øu mu·ªën c·∫≠p nh·∫≠t n·ªôi dung trang m√† kh√¥ng l√†m m·∫•t d·ªØ li·ªáu c≈©, b·∫°n n√™n d√πng innerHTML thay v√¨ document.write(), v√≠ d·ª•:
        <p id="demo"></p>
        <script>
            document.getElementById("demo").innerHTML = "N·ªôi dung m·ªõi!";
        </script>
        
        ‚úÖ vd2: 
        <h1>My First Web Page</h1>
        <p>My First Paragraph</p>

        <p id="demo"></p>

        <script>
        document.getElementById("demo").innerHTML = "<h2>Hello World</h2>";
        </script>

        ket qua: My First Web Page
                My First Paragraph
                Hello World



        üéØ Khi n√†o n√™n d√πng document.write()?
        Khi c·∫ßn ghi nhanh n·ªôi dung v√†o trang trong qu√° tr√¨nh t·∫£i.

        Khi th·ª≠ nghi·ªám JavaScript ƒë∆°n gi·∫£n.

        Khi t·∫°o t√†i li·ªáu HTML t·ª´ JavaScript trong c√°c ·ª©ng d·ª•ng ƒë∆°n gi·∫£n.


        üìå C√°c ki·ªÉu d·ªØ li·ªáu trong JavaScript:

        Ki·ªÉu D·ªØ Li·ªáu	    M√¥ T·∫£	                                V√≠ d·ª•	         typeof Tr·∫£ V·ªÅ

        String	           Chu·ªói k√Ω t·ª±	                         "Hello"	            "string"
        Number	           S·ªë nguy√™n ho·∫∑c s·ªë th·ª±c	              42, 3.14	            "number"
        Boolean	           ƒê√∫ng (true) ho·∫∑c sai (false)	         true, false	        "boolean"
        Object	           ƒê·ªëi t∆∞·ª£ng                        	{name: "John"}	            "object"
        Array	           M·∫£ng (l√† m·ªôt d·∫°ng object)	            [1, 2, 3]	"           object"
        Function	       H√†m	                                    function() {}	      "function"
        Undefined	       Bi·∫øn ch∆∞a ƒë∆∞·ª£c g√°n gi√° tr·ªã	            let x;          	"undefined"
        Null	           Gi√° tr·ªã r·ªóng (c·ªë √Ω)	                    null	                "object" (L·ªñI c·ªßa JS)



        Chuy·ªÉn ƒë·ªïi ki·ªÉu d·ªØ li·ªáu t·ª± ƒë·ªông (Implicit type conversion)

        üéØCHUY·ªÇN ƒê·ªîI D·ªÆ LI·ªÜU CHU·ªñI SANG S·ªê ƒê·ªÇ T√çNH TO√ÅN.
        vd: 
        let a = prompt("nhap so a");   //v√≠ d·ª• nh·∫≠p 10
        let b = prompt ("nhap so b");  //v√≠ d·ª• nh·∫≠p 20
        
        let x = Number (a) + Number (b);
        
        console.log(x);

        n·∫øu kh√¥ng c√≥ Number th√¨ k·∫øt qu·∫£ 1020
        n·∫øu C√ì Number th√¨ k·∫øt qu·∫£ 30
        th√¨ Number l√† ki·ªÉu ƒë·ªÉ chuy·ªÉn ƒë·ªïi


        ‚úÖC√°ch JavaScript x·ª≠ l√Ω:
        "5" + 2 ‚Üí Chu·ªói "5" v√† s·ªë 2 ‚áí JavaScript chuy·ªÉn 2 th√†nh chu·ªói "2" v√† th·ª±c hi·ªán n·ªëi chu·ªói ‚Üí K·∫øt qu·∫£ l√† "52".
    
        "52" + 3 ‚Üí "52" (chu·ªói) v√† 3 (s·ªë) ‚áí JavaScript ti·∫øp t·ª•c chuy·ªÉn 3 th√†nh "3" v√† n·ªëi chu·ªói ‚Üí K·∫øt qu·∫£ cu·ªëi c√πng l√† "523".
    
        ‚úÖN·∫øu b·∫°n ƒë·∫∑t m·ªôt s·ªë trong d·∫•u ngo·∫∑c k√©p, c√°c s·ªë c√≤n l·∫°i s·∫Ω ƒë∆∞·ª£c coi l√† chu·ªói v√† ƒë∆∞·ª£c n·ªëi l·∫°i.
    
        let x = 2 + 3 + "5";
        K·∫æT QU·∫¢: 55

        ‚úÖJavaScript t·ª± ƒë·ªông chuy·ªÉn ƒë·ªïi ki·ªÉu d·ªØ li·ªáu khi c·∫ßn thi·∫øt, th∆∞·ªùng x·∫£y ra trong c√°c ph√©p to√°n.
        let x = "10" + 2;   //"102" v√¨ chu·ªói ∆∞u ti√™n h∆°n d·∫•u + n√™n n·ªëi chu·ªói
        let y = "10" - 2;   // 8     chu·ªói k c√≥ t√°c d·ª•ng v·ªõi d·∫•u -
        let x = 2 * "3";    // 6 chu·ªói  3 ƒëc chuy·ªÉn sang s·ªë

        üéØ‚úÖChuy·ªÉn ƒë·ªïi ki·ªÉu d·ªØ li·ªáu t∆∞·ªùng minh (Explicit type conversion)
        B·∫°n c√≥ th·ªÉ ch·ªß ƒë·ªông chuy·ªÉn ƒë·ªïi ki·ªÉu d·ªØ li·ªáu b·∫±ng c√°ch s·ª≠ d·ª•ng c√°c ph∆∞∆°ng th·ª©c c√≥ s·∫µn trong JavaScript.

        Chuy·ªÉn ƒë·ªïi sang s·ªë (number)
        S·ª≠ d·ª•ng c√°c c√°ch sau ƒë·ªÉ chuy·ªÉn m·ªôt gi√° tr·ªã sang ki·ªÉu s·ªë:
        Number(): Chuy·ªÉn ƒë·ªïi gi√° tr·ªã sang ki·ªÉu s·ªë.
        parseInt(): Chuy·ªÉn ƒë·ªïi sang s·ªë nguy√™n.
        parseFloat(): Chuy·ªÉn ƒë·ªïi sang s·ªë th·∫≠p ph√¢n.


        console.log (...date: Number (value: "123"));       --> 123
        console.log (...date: parseInt (value: "123.45"));      --> 123
        console.log (...date: parseFloat (value: "123.45"));       --> 123.45
        console.log (...date: Number (value: "abc"));       --> NaN (kh√¥ng ph·∫£i s·ªë) 


        üéØ‚úÖChuy·ªÉn ƒë·ªïi sang chu·ªói (string)
        S·ª≠ d·ª•ng c√°c c√°ch sau ƒë·ªÉ chuy·ªÉn m·ªôt gi√° tr·ªã sang ki·ªÉu chu·ªói:
        String(): Chuy·ªÉn ƒë·ªïi gi√° tr·ªã sang chu·ªói.
        toString(): Ph∆∞∆°ng th·ª©c c√≥ s·∫µn tr√™n ƒë·ªëi t∆∞·ª£ng.

        console.log (...date: String (value: "123.45"));      --> "123"
        console.log (...date: (123).toString ());       --> "123"
        console.log (...date: String (value: true));       --> "true"


        üéØ‚úÖChuy·ªÉn ƒë·ªïi sang ki·ªÉu lu·∫≠n l√Ω (Boolean)
        S·ª≠ d·ª•ng Boolean() ƒë·ªÉ chuy·ªÉn ƒë·ªïi gi√° tr·ªã sang ki·ªÉu Boolean.
        C√°c gi√° tr·ªã sau ƒë√¢y ƒë∆∞·ª£c coi l√† falsy (chuy·ªÉn th√†nh false):

        0
        "" (chu·ªói r·ªóng)
        null
        undefined
        NaN
        T·∫•t c·∫£ gi√° tr·ªã kh√°c ƒë∆∞·ª£c coi l√† truthy (chuy·ªÉn th√†nh true).

        console.log (...date: Boolean (value: 0));       --> false
        console.log (...date: Boolean (value: ""));      --> false
        console.log (...date: Boolean (value: "Hello"));       --> true
        console.log (...date: Boolean (value: "abc"));       --> true


        ‚úÖTrong bi·ªÉu th·ª©c ch·ª©a to√°n h·∫°ng c√≥ ki·ªÉu Boolean, Javascript s·∫Ω chuy·ªÉn ki·ªÉu to√°n h·∫°ng n√†y, n·∫øu true s·∫Ω chuy·ªÉn sang gi√° tr·ªã 1, false chuy·ªÉn sang gi√° tr·ªã 0.
        let result;

        result = '5' - true;
        console.log(result); // 4

        result = 2 + true;
        console.log(result); // 3

        result = 4 + false;
        console.log(result); // 4

        ‚úÖTrong bi·ªÉu th·ª©c ch·ª©a to√°n h·∫°ng c√≥ ki·ªÉu null, Javascript s·∫Ω chuy·ªÉn null th√†nh gi√° tr·ªã 0.
        let result;

        result = -5 + null;
        console.log(result);  // -5

        result = '15' - null;
        console.log(result);  // 15



        üß∞üéØ‚úÖ JavaScript Explicit Conversion CHUY·ªÇN ƒê·ªîI TH·ª¶ C√îNG
        Trong m·ªôt v√†i tr∆∞·ªùng h·ª£p, khi ch√∫ng ta mu·ªën chuy·ªÉn ƒë·ªïi ki·ªÉu d·ªØ li·ªáu n√†y sang ki·ªÉu d·ªØ li·ªáu kh√°c theo nhu c·∫ßu c·ªßa m√¨nh (explicit conversion - chuy·ªÉn ƒë·ªïi th·ªß c√¥ng).

        Trong JavaScript, ch√∫ng ta s·∫Ω th·ª±c hi·ªán chuy·ªÉn ki·ªÉu th·ªß c√¥ng b·∫±ng built-in methods c√≥ s·∫µn.

        let result;

        // Chuy·ªÉn string sang number
        result = Number('2902');
        console.log(result); // 2902

        result = Number('homiedev')  
        console.log(result); // NaN

        // empty strings v√† null return 0
        result = Number('')  
        console.log(result); // 0

        result = Number('       ')  
        console.log(result); // 0

        // boolean sang number
        result = Number(true);
        console.log(result); // 1

        result = Number(false);
        console.log(result); // 0

        ‚úÖƒê·ªÉ chuy·ªÉn ƒë·ªïi c√°c ki·ªÉu d·ªØ li·ªáu kh√°c th√†nh string, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng String() ho·∫∑c toString().

        //number to string
        let result;
        result = String(2902);
        console.log(result);  // "2902"

        result = String(0 + 0);
        console.log(result); // "0"

        result = String(null);
        console.log(result); // "null"

        result = String(undefined);
        console.log(result); // "undefined"

        result = String(NaN);
        console.log(result); // "NaN"

        result = String(true);
        console.log(result); // "true"

        result = String(Symbol('test'));
        console.log(result); // "Symbol('test')"

        // toString()
        result = (0).toString();
        console.log(result); // "0"

        result = false.toString();
        console.log(result); // "false"

        String() c√≥ th·ªÉ nh·∫≠n null v√† undefined v√† chuy·ªÉn ch√∫ng th√†nh chu·ªói. Tuy nhi√™n, toString() s·∫Ω hi·ªán l·ªói khi truy·ªÅn gi√° tr·ªã null ho·∫∑c undefined.


        ‚úÖChuy·ªÉn ki·ªÉu sang boolean
        ƒê·ªÉ chuy·ªÉn ƒë·ªïi c√°c ki·ªÉu d·ªØ li·ªáu kh√°c th√†nh boolean, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng Boolean().
        Trong JavaScript, khi chuy·ªÉn ki·ªÉu th√†nh boolean, c√°c gi√° tr·ªã: undefined, null, 0, NaN, '' chuy·ªÉn th√†nh false. T·∫•t c·∫£ c√°c gi√° tr·ªã kh√°c s·∫Ω l√† true

        let result;
        result = Boolean('');
        console.log(result); // false

        result = Boolean(0);
        console.log(result); // false

        result = Boolean(undefined);
        console.log(result); // false

        result = Boolean('undefined');
        console.log(result); // true

        result = Boolean(null);
        console.log(result); // false

        result = Boolean(NaN);
        console.log(result); // false


üß∞KI·ªÇU D·ªÆ LI·ªÜU
‚úÖJavaScript ch·ªâ c√≥ m·ªôt ki·ªÉu d·ªØ li·ªáu s·ªë duy nh·∫•t ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ bi·ªÉu di·ªÖn c·∫£ s·ªë nguy√™n v√† s·ªë th·ª±c. Lo·∫°i d·ªØ li·ªáu n√†y ƒë∆∞·ª£c g·ªçi l√† Number.

‚úÖC√°c lo·∫°i gi√° tr·ªã Number
    S·ªë nguy√™n (Integer)

    ‚úÖS·ªë nguy√™n l√† c√°c gi√° tr·ªã kh√¥ng c√≥ ph·∫ßn th·∫≠p ph√¢n.
    10 : nguy√™n d∆∞∆°ng
    -5 : nguy√™n √¢m

    ‚úÖS·ªë th·ª±c (Floating-point numbers)
    S·ªë th·ª±c l√† c√°c gi√° tr·ªã c√≥ ph·∫ßn th·∫≠p ph√¢n.
    10.1 s·ªë th·ª±c d∆∞∆°ng
    -2.1 s·ªë th·ª±c √¢m

    ‚úÖC√°c gi√° tr·ªã ƒë·∫∑c bi·ªát
    NaN (Not a number)
    NaN l√† gi√° tr·ªã ƒë·∫°i di·ªán cho m·ªôt gi√° tr·ªã kh√¥ng ph·∫£i s·ªë.
    Th∆∞·ªùng xu·∫•t hi·ªán khi th·ª±c hi·ªán ph√©p to√°n kh√¥ng h·ª£p l·ªá.
    ‚úÖInfinity v√† -Infinity
    Infinity: ƒê·∫°i di·ªán cho gi√° tr·ªã d∆∞∆°ng v√¥ c·ª±c (‚àû).
    -Infinity: ƒê·∫°i di·ªán cho gi√° tr·ªã √¢m v√¥ c·ª±c (-‚àû)
‚úÖC√°c ph∆∞∆°ng th·ª©c v√† thu·ªôc t√≠nh c·ªßa Number
    Thu·ªôc t√≠nh c·ªßa Number
    Thu·ªôc t√≠nh                  M√¥ t·∫£
    Number.MAX_VALUE            S·ªë l·ªõn nh·∫•t c√≥ th·ªÉ bi·ªÉu di·ªÖn	
    Number.MIN_VALUE             S·ªë nh·ªè nh·∫•t c√≥ th·ªÉ bi·ªÉu di·ªÖn
    Number.POSITION_INFINITY    ƒê·∫°i di·ªán cho d∆∞∆°ng v√¥ c·ª±c
    Number.POSITION_INFINITY    	 ƒê·∫°i di·ªán cho √¢m v√¥ c·ª±c
    Number.NaN                  	ƒê·∫°i di·ªán cho NaN

    ‚úÖPh∆∞∆°ng th·ª©c c·ªßa Number
   
    1Ô∏è‚É£ Number.isFinite(value) ‚Äì Ki·ªÉm tra s·ªë c√≥ ph·∫£i l√† h·ªØu h·∫°n kh√¥ng?
    ‚úî S·ªë h·ªØu h·∫°n: L√† s·ªë th·ª±c c√≥ gi√° tr·ªã x√°c ƒë·ªãnh, kh√¥ng ph·∫£i v√¥ c·ª±c (Infinity) hay NaN.
    ‚úî N·∫øu l√† s·ªë h·ªØu h·∫°n ‚Üí Tr·∫£ v·ªÅ true
    ‚úî N·∫øu l√† v√¥ c·ª±c ho·∫∑c kh√¥ng ph·∫£i s·ªë ‚Üí Tr·∫£ v·ªÅ false
    üîç V√≠ d·ª•:
    console.log(Number.isFinite(100));      // üëâ true (100 l√† s·ªë h·ªØu h·∫°n)
    console.log(Number.isFinite(Infinity)); // üëâ false (Infinity kh√¥ng ph·∫£i s·ªë h·ªØu h·∫°n)
    console.log(Number.isFinite(-Infinity)); // üëâ false
    console.log(Number.isFinite(NaN));      // üëâ false (NaN kh√¥ng ph·∫£i s·ªë)
    console.log(Number.isFinite("100"));    // üëâ false (Chu·ªói kh√¥ng ph·∫£i s·ªë)
    
    2Ô∏è‚É£ Number.isInteger(value) ‚Äì Ki·ªÉm tra s·ªë c√≥ ph·∫£i l√† s·ªë nguy√™n kh√¥ng?
    ‚úî S·ªë nguy√™n: L√† s·ªë kh√¥ng c√≥ ph·∫ßn th·∫≠p ph√¢n.
    ‚úî N·∫øu l√† s·ªë nguy√™n ‚Üí Tr·∫£ v·ªÅ true
    ‚úî N·∫øu l√† s·ªë th·ª±c (c√≥ d·∫•u .) ho·∫∑c kh√¥ng ph·∫£i s·ªë ‚Üí Tr·∫£ v·ªÅ false
    üîç V√≠ d·ª•:
    console.log(Number.isInteger(10));    // üëâ true (10 l√† s·ªë nguy√™n)
    console.log(Number.isInteger(-5));    // üëâ true (-5 c≈©ng l√† s·ªë nguy√™n)
    console.log(Number.isInteger(3.14));  // üëâ false (3.14 c√≥ ph·∫ßn th·∫≠p ph√¢n)
    console.log(Number.isInteger("10"));  // üëâ false (Chu·ªói kh√¥ng ph·∫£i s·ªë)
    console.log(Number.isInteger(NaN));   // üëâ false (NaN kh√¥ng ph·∫£i s·ªë)

    3Ô∏è‚É£ Number.isNaN(value) ‚Äì Ki·ªÉm tra gi√° tr·ªã c√≥ ph·∫£i l√† NaN (Not a Number) kh√¥ng?
    ‚úî NaN l√† m·ªôt gi√° tr·ªã ƒë·∫∑c bi·ªát trong JavaScript khi m·ªôt ph√©p t√≠nh kh√¥ng h·ª£p l·ªá x·∫£y ra.
    ‚úî N·∫øu l√† NaN ‚Üí Tr·∫£ v·ªÅ true
    ‚úî N·∫øu kh√¥ng ph·∫£i NaN ‚Üí Tr·∫£ v·ªÅ false

    üîç V√≠ d·ª•:
    console.log(Number.isNaN(NaN));       // üëâ true (NaN ch√≠nh l√† NaN)
    console.log(Number.isNaN(10 / "abc")); // üëâ true (10 chia chu·ªói ‚Üí NaN)
    console.log(Number.isNaN("Hello"));   // üëâ false (Chu·ªói kh√¥ng ph·∫£i NaN)
    console.log(Number.isNaN(100));       // üëâ false (100 l√† s·ªë b√¨nh th∆∞·ªùng)
    console.log(Number.isNaN(undefined)); // üëâ false (undefined kh√¥ng ph·∫£i NaN)
    
    üí° L∆∞u √Ω:

    isNaN() (h√†m to√†n c·ª•c) c√≥ th·ªÉ nh·∫ßm l·∫´n gi·ªØa chu·ªói v√† s·ªë.
    
    D√πng Number.isNaN() ch√≠nh x√°c h∆°n v√¨ n√≥ ch·ªâ ki·ªÉm tra s·ªë th·ª±c s·ª± l√† NaN.

    4Ô∏è‚É£ toFixed(n) ‚Äì L√†m tr√≤n s·ªë ƒë·∫øn n ch·ªØ s·ªë th·∫≠p ph√¢n
    ‚úî D√πng ƒë·ªÉ ƒë·ªãnh d·∫°ng s·ªë th·∫≠p ph√¢n v·ªõi n ch·ªØ s·ªë sau d·∫•u .
    ‚úî K·∫øt qu·∫£ tr·∫£ v·ªÅ l√† chu·ªói, kh√¥ng ph·∫£i s·ªë

    üîç V√≠ d·ª•:
    let num = 3.14159;
    console.log(num.toFixed(2)); // üëâ "3.14" (gi·ªØ 2 ch·ªØ s·ªë th·∫≠p ph√¢n)
    console.log(num.toFixed(0)); // üëâ "3" (b·ªè ph·∫ßn th·∫≠p ph√¢n)
    console.log(num.toFixed(5)); // üëâ "3.14159" (gi·ªØ 5 s·ªë th·∫≠p ph√¢n)
    console.log((5.678).toFixed(1)); // üëâ "5.7" c√≥ nghƒ©a l√† l√†m tr√≤n s·ªë 5.678 l√™n 1 ch·ªØ s·ªë th·∫≠p ph√¢n. ·ªë 5.678 s·∫Ω l√†m tr√≤n l√™n th√†nh 5.7
    
    5Ô∏è‚É£ toString() ‚Äì Chuy·ªÉn s·ªë th√†nh chu·ªói
    ‚úî D√πng khi c·∫ßn chuy·ªÉn ƒë·ªïi s·ªë th√†nh chu·ªói ƒë·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu d·∫°ng vƒÉn b·∫£n.
    ‚úî C√≥ th·ªÉ chuy·ªÉn ƒë·ªïi sang h·ªá c∆° s·ªë kh√°c (nh·ªã ph√¢n, th·∫≠p ph√¢n, th·∫≠p l·ª•c ph√¢n, v.v.)

    üîç V√≠ d·ª•:
    let num = 123;
    console.log(num.toString());   // üëâ "123" (chuy·ªÉn th√†nh chu·ªói)
    console.log((255).toString(2)); // üëâ "11111111" (chuy·ªÉn sang nh·ªã ph√¢n) base 2. Trong h·ªá nh·ªã ph√¢n, 255 = 11111111 (v√¨ 255 = 2‚Å∑ + 2‚Å∂ + 2‚Åµ + 2‚Å¥ + 2¬≥ + 2¬≤ + 2¬π + 2‚Å∞).
    K·∫øt qu·∫£ tr·∫£ v·ªÅ l√† chu·ªói "11111111".

    console.log((255).toString(16)); // üëâ "ff" (chuy·ªÉn sang h·ªá th·∫≠p l·ª•c ph√¢n) base 16. Trong h·ªá th·∫≠p l·ª•c ph√¢n, 255 = FF (v√¨ 255 = 15√ó16 + 15, m√† 15 trong h·ªá th·∫≠p l·ª•c ph√¢n l√† F).
    K·∫øt qu·∫£ tr·∫£ v·ªÅ l√† chu·ªói "ff".
    
    üí° ·ª®ng d·ª•ng:
    Khi c·∫ßn n·ªëi s·ªë v·ªõi chu·ªói ("S·ªë c·ªßa b·∫°n l√† " + num.toString())
    Khi c·∫ßn chuy·ªÉn ƒë·ªïi h·ªá s·ªë (.toString(2), .toString(16)
        

    üí°V·ªõi JavaScript c≈©ng v·∫≠y, b·∫°n c√≥ th·ªÉ d√πng ch·ªØ c√°i e ƒë·ªÉ bi·ªÉu di·ªÖn s·ªë l∆∞·ª£ng ch·ªØ s·ªë 0, v√≠ d·ª•:
    let a = 1e3; // 1_000 - 1 ngh√¨n
    let b = 1e6; // 1_000_000 - 1 tri·ªáu
    let c = 1e9; // 1_000_000_000 - 1 t·ª∑
    let d = 4.6e9; // 4_600_000_000 - 4.6 t·ª∑

    N√≥i c√°ch kh√°c, eN th·ª±c hi·ªán nh√¢n s·ªë (tr∆∞·ªõc e) b·ªüi v·ªõi s·ªë 10 m≈© N.
    1e3 === 1 * 1000; // e3 t∆∞∆°ng ƒë∆∞∆°ng *1000
    1.23e4 === 1.23 * 10000; // e4 t∆∞∆°ng ƒë∆∞∆°ng *10000

    ‚úÖ‚úîT∆∞∆°ng t·ª±, b·∫°n c≈©ng c√≥ th·ªÉ d√πng e ƒë·ªÉ bi·ªÉu di·ªÖn nh·ªØng s·ªë r·∫•t nh·ªè b·∫±ng c√°ch thay N ·ªü tr√™n b·∫±ng s·ªë √¢m:
    0.000001 === 1e-6;

    ‚úÖ‚úîN√≥i c√°ch kh√°c, e-N th·ª±c hi·ªán chia s·ªë (tr∆∞·ªõc e) b·ªüi s·ªë 10 m≈© N.
    1e-3 === 1 / 1000; // e3 t∆∞∆°ng ƒë∆∞∆°ng /1000
    1.23e-4 === 1.23 / 10000; // e4 t∆∞∆°ng ƒë∆∞∆°ng /10000



 üß∞  Bi·ªÉu di·ªÖn s·ªë ·ªü h·ªá c∆° s·ªë 16, 8 v√† 2
    C√°c s·ªë m√¨nh th∆∞·ªùng vi·∫øt tr√™n ƒë√¢y l√† bi·ªÉu di·ªÖn ·ªü h·ªá th·∫≠p ph√¢n (c∆° s·ªë 10). Ngo√†i ra, b·∫°n c√≥ th·ªÉ bi·ªÉu di·ªÖn number trong JavaScript ·ªü h·ªá th·∫≠p l·ª•c ph√¢n (c∆° s·ªë 16), b√°t ph√¢n (c∆° s·ªë 8) v√† nh·ªã ph√¢n (c∆° s·ªë 2).

    H·ªá th·∫≠p l·ª•c ph√¢n 16 s·ª≠ d·ª•ng ti·ªÅn t·ªë l√† 0x.
    H·ªá b√°t ph√¢n 8 s·ª≠ d·ª•ng ti·ªÅn t·ªë l√† 0o.
    H·ªá nh·ªã ph√¢n 2 s·ª≠ d·ª•ng ti·ªÅn t·ªë l√† 0b.
    V√≠ d·ª• bi·ªÉu di·ªÖn s·ªë ·ªü h·ªá 16, 8 v√† 2 l√†:

    // H·ªá c∆° s·ªë 16
    console.log(0xff); // 255
    console.log(0xff); // 255 - kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng

    // H·ªá c∆° s·ªë 8
    console.log(0o377); // 255

    // H·ªá c∆° s·ªë 2
    console.log(0b11111111); // 255


 üß∞  Ph∆∞∆°ng th·ª©c toString(base)
 Ph∆∞∆°ng th·ª©c num.toString(base) tr·∫£ v·ªÅ string bi·ªÉu di·ªÖn s·ªë num ·ªü h·ªá c∆° s·ªë base, v√≠ d·ª•:
    let num = 255;

    // chuy·ªÉn sang h·ªá c∆° s·ªë 16
    console.log(num.toString(16)); // ff
    
    // chuy·ªÉn sang h·ªá c∆° s·ªë 2
    console.log(num.toString(2)); // 11111111



üß∞‚úÖ Ki·ªÉu d·ªØ li·ªáu string trong javascript (string c∆° b·∫£n + template string)

    String c∆° b·∫£n
    Khai b√°o chu·ªói
    B·∫°n c√≥ th·ªÉ khai b√°o m·ªôt chu·ªói b·∫±ng:
    D·∫•u ngo·∫∑c ƒë∆°n (' ')
    D·∫•u ngo·∫∑c k√©p (" ")
    Template literals (` `).
   
        vd:
         let name = "Alice";
        let city = 'H√† N·ªôi';
        console.log(name, city); 
        // üëâ Alice H√† N·ªôi

        ‚úÖ1Ô∏è‚É£ƒê·∫∑c ƒëi·ªÉm c·ªßa string
        Immutable (B·∫•t bi·∫øn): M·ªôt chu·ªói kh√¥ng th·ªÉ b·ªã thay ƒë·ªïi tr·ª±c ti·∫øp. Khi b·∫°n thay ƒë·ªïi chu·ªói, m·ªôt chu·ªói m·ªõi ƒë∆∞·ª£c t·∫°o ra.
        Ch·ª©a b·∫•t k·ª≥ k√Ω t·ª± n√†o: Bao g·ªìm ch·ªØ c√°i, s·ªë, k√Ω t·ª± ƒë·∫∑c bi·ªát, ho·∫∑c kho·∫£ng tr·∫Øng.

     

            üöÄC√°c ph∆∞∆°ng th·ª©c l√†m vi·ªác v·ªõi String

            üìç L·∫•y ƒë·ªô d√†i c·ªßa chu·ªói (length)

            let text = "JavaScript";
            console.log(text.length); // üëâ 10
            
            üìç N·ªëi chu·ªói (+, concat())

            let str1 = "Hello";
            let str2 = "World";
            console.log(str1 + " " + str2); // üëâ "Hello World"
            console.log(str1.concat(" ", str2)); // üëâ "Hello World"

            üìç L·∫•y k√Ω t·ª± trong chu·ªói (charAt(), [])

            let word = "Hello";
            console.log(word.charAt(1)); // üëâ "e"
            console.log(word[1]); // üëâ "e"

            üìç Chuy·ªÉn ƒë·ªïi ch·ªØ hoa, ch·ªØ th∆∞·ªùng (toUpperCase(), toLowerCase())

            let text = "JavaScript";
            console.log(text.toUpperCase()); // üëâ "JAVASCRIPT"
            console.log(text.toLowerCase()); // üëâ "javascript"

            üìç T√¨m ki·∫øm chu·ªói (indexOf(), includes())

            üîπ T√åM RA V·ªä TR√ç ƒê·∫¶U TI√äN M√Ä K√ù T·ª∞ CON XU·∫§T HI·ªÜN TRON  CHU·ªñI G·ªêC
                N·∫æU KH√îNG T√åM ƒê∆Ø·ª¢C S·∫º TR·∫¢ V·ªÄ GI√Å TR·ªä L√Ä  -1 


            let sentence = "T√¥i th√≠ch h·ªçc JavaScript!";
            console.log(sentence.indexOf("JavaScript")); // üëâ 14 (v·ªã tr√≠ xu·∫•t hi·ªán ƒë·∫ßu ti√™n)
            console.log(sentence.includes("h·ªçc")); // üëâ true (ki·ªÉm tra c√≥ ch·ª©a t·ª´ kh√¥ng)

            üìç C·∫Øt chu·ªói (slice(), substring())
            let text = "JavaScript";
            console.log(text.slice(0, 4)); // üëâ "Java" (c·∫Øt t·ª´ v·ªã tr√≠ 0 ƒë·∫øn 3)
            console.log(text.substring(4, 10)); // üëâ "Script"
            console.log(text.slice(4)); // üëâ "Script"  (c·∫Øt 4 k√Ω t·ª± ƒë·∫ßu ti√™n)

            ‚úÖ slice() h·ªó tr·ª£ s·ªë √¢m (t√≠nh t·ª´ cu·ªëi chu·ªói) 
            let text = "JavaScript";
            console.log(text.slice(0, 4)); // üëâ "Java"
            console.log(text.slice(-6));  // üëâ "Script" (√¢m t√≠nh t·ª´ cu·ªëi)

             ‚ùå substring() KH√îNG h·ªó tr·ª£ s·ªë √¢m
             let text = "JavaScript";
             console.log(text.substring(0, 4));  // üëâ "Java"
             console.log(text.substring(-6));    // üëâ "JavaScript" (√¢m b·ªã ƒë·ªïi th√†nh 0 n√™n m·∫∑c ƒë·ªãnh 0 l√† l·∫•y h·∫øt)
                L∆ØU √ù: üîÑ substring() ho√°n ƒë·ªïi start v√† end n·∫øu start > end
                console.log(text.slice(4, 0));     // üëâ "" (tr·∫£ v·ªÅ chu·ªói r·ªóng)
                console.log(text.substring(4, 0)); // üëâ "Java" (t·ª± ƒë·ªông ƒë·∫£o v·ªã tr√≠)
                
            

            üìç Thay th·∫ø chu·ªói (replace())

            let text = "T√¥i y√™u Java!";
            console.log(text.replace("Java", "JavaScript")); // üëâ "T√¥i y√™u JavaScript!"

            üìç  ph√¢n t√°ch chu·ªói b·∫±ng split(separator)
            C√∫ ph√°p:
            string.split(separator, limit)
            
            - separator: D·∫•u ph√¢n t√°ch (chu·ªói/k√Ω t·ª±) ƒë·ªÉ c·∫Øt chu·ªói (n·∫øu kh√¥ng c√≥, s·∫Ω tr·∫£ v·ªÅ m·∫£ng ch·ª©a to√†n b·ªô chu·ªói).
            - limit (tu·ª≥ ch·ªçn): Gi·ªõi h·∫°n s·ªë ph·∫ßn t·ª≠ c·ªßa m·∫£ng.

            V√≠ d·ª• 1: C·∫Øt chu·ªói theo d·∫•u c√°ch
            let text = "Hello world JavaScript";
            let words = text.split(" "); 
            console.log(words); // üëâ ["Hello", "world", "JavaScript"]

            V√≠ d·ª• 2: C·∫Øt theo d·∫•u ph·∫©y
            let fruits = "Apple,Orange,Banana";
            console.log(fruits.split(",")); 
            // üëâ ["Apple", "Orange", "Banana"]
            
            V√≠ d·ª• 3: Gi·ªõi h·∫°n s·ªë ph·∫ßn t·ª≠
            let fruits = "Apple,Orange,Banana";
            console.log(fruits.split(",", 2)); 
            // üëâ ["Apple", "Orange"]







   üß∞  ‚úÖ2Ô∏è‚É£Template string

            s·ª≠ d·ª•ng d·∫•u backtick (``)
            C√°ch s·ª≠ d·ª•ng:
            N·ªôi suy (Interpolation): Ch√®n gi√° tr·ªã bi·∫øn ho·∫∑c bi·ªÉu th·ª©c v√†o chu·ªói b·∫±ng c√∫ ph√°p ${expression}.
            H·ªó tr·ª£ xu·ªëng d√≤ng: Cho ph√©p vi·∫øt chu·ªói nhi·ªÅu d√≤ng m√† kh√¥ng c·∫ßn k√Ω t·ª± n·ªëi (\n ho·∫∑c +).
        vd:
            let name = "Alice";
            let age = 25;

            // C√°ch c≈© (d√πng d·∫•u + ƒë·ªÉ n·ªëi chu·ªói)
            console.log("Xin ch√†o, t√¥i l√† " + name + ", t√¥i " + age + " tu·ªïi.");

            // C√°ch m·ªõi (d√πng Template String)
            console.log(`Xin ch√†o, t√¥i l√† ${name}, t√¥i ${age} tu·ªïi.`);

            // üëâ K·∫øt qu·∫£: Xin ch√†o, t√¥i l√† Alice, t√¥i 25 tu·ªïi.



            üöÄ B·∫°n n√™n d√πng Template String khi n√†o?
            ‚úî Khi c·∫ßn n·ªëi nhi·ªÅu chu·ªói.
            ‚úî Khi c·∫ßn ch√®n bi·∫øn v√†o chu·ªói.
            ‚úî Khi c·∫ßn vi·∫øt chu·ªói xu·ªëng d√≤ng d·ªÖ d√†ng.

        VD:
            let user = "John";
            let product = "Laptop";
            let price = 1500;

            let message = `Xin ch√†o ${user}, 
            S·∫£n ph·∫©m b·∫°n ƒë·∫∑t l√†: ${product}.
            Gi√°: ${price}$`;

            console.log(message);



 üß∞ ‚úÖstartsWith() v√† endsWith()
            ‚úÖstartsWith(value) ‚Äì Ki·ªÉm tra chu·ªói b·∫Øt ƒë·∫ßu b·∫±ng k√Ω t·ª± n√†o ƒë√≥
        C√∫ ph√°p: string.startsWith(value, startPosition)

        value: Chu·ªói c·∫ßn ki·ªÉm tra.
        startPosition (tu·ª≥ ch·ªçn): V·ªã tr√≠ b·∫Øt ƒë·∫ßu ki·ªÉm tra.

         vd: 
         let text = "Hello JavaScript";
         console.log(text.startsWith("Hello")); // üëâ true
         console.log(text.startsWith("Java"));  // üëâ false

   V√≠ d·ª• 2: Ki·ªÉm tra t·ª´ v·ªã tr√≠ kh√°c    
         console.log(text.startsWith("Java", 6)); // üëâ true



         ‚úÖ endsWith(value) ‚Äì Ki·ªÉm tra chu·ªói k·∫øt th√∫c b·∫±ng k√Ω t·ª± n√†o ƒë√≥

         value: Chu·ªói c·∫ßn ki·ªÉm tra.
        length (tu·ª≥ ch·ªçn): S·ªë k√Ω t·ª± ƒë·∫ßu ti√™n c·∫ßn ki·ªÉm tra.

        V√≠ d·ª• 1: Ki·ªÉm tra chu·ªói k·∫øt th√∫c b·∫±ng "Script"
        let text = "Hello JavaScript";
        console.log(text.endsWith("Script")); // üëâ true
        console.log(text.endsWith("Hello"));  // üëâ false

   V√≠ d·ª• 2: Ki·ªÉm tra trong ph·∫ßn gi·ªõi h·∫°n
        console.log(text.endsWith("Java", 10)); // üëâ true (t√≠nh t·ª´ k√Ω t·ª± 0 ‚Üí 10)

        
 üß∞ ‚úÖnuLL v√† undefined
        
        ‚úÖ undefined l√† g√¨?
        Khi m·ªôt bi·∫øn ƒë∆∞·ª£c khai b√°o nh∆∞ng ch∆∞a ƒë∆∞·ª£c g√°n gi√° tr·ªã, n√≥ s·∫Ω c√≥ gi√° tr·ªã undefined.

        let x;
        console.log(x); // undefined

        C√°c tr∆∞·ªùng h·ª£p kh√°c tr·∫£ v·ªÅ undefined:
        H√†m kh√¥ng return g√¨ s·∫Ω tr·∫£ v·ªÅ undefined.
        Truy c·∫≠p thu·ªôc t√≠nh kh√¥ng t·ªìn t·∫°i trong object.

        function test() {}
        console.log(test()); // undefined

        let obj = {};
        console.log(obj.name); // undefined

                

        ‚úÖ null l√† g√¨?
        null l√† m·ªôt gi√° tr·ªã ƒë∆∞·ª£c g√°n c·ªë √Ω ƒë·ªÉ bi·ªÉu th·ªã r·∫±ng kh√¥ng c√≥ gi√° tr·ªã g√¨ c·∫£ (tr·ªëng, kh√¥ng x√°c ƒë·ªãnh, kh√¥ng t·ªìn t·∫°i).
                
        let y = null;
        console.log(y); // null
                ‚úÖ Khi n√†o d√πng null?
                Khi b·∫°n mu·ªën reset ho·∫∑c l√†m r·ªóng m·ªôt gi√° tr·ªã:
                vd: 
                let user = { name: "Anna" };
                user = null; // Xo√° to√†n b·ªô object

        
        üî• So s√°nh b·∫±ng to√°n t·ª≠:
        console.log(null == undefined); // true (l·ªèng l·∫ªo)
        console.log(null === undefined); // false (nghi√™m ng·∫∑t)


    N√ìI D·ªÑ HI·ªÇU C·∫¢ null v√† undefined ƒê·ªÄU KH√îNG MANG GI√Å TR·ªä G√å--> ƒê√öNG
    null c√≥ th·ªÉ g√°n gi√° tr·ªã nh∆∞ng undefined kh√¥ng th·ªÉ --> SAI



  üß∞ ‚úÖ  Math Object trong Javascript
  Trong JavaScript, Math l√† m·ªôt object t√≠ch h·ª£p s·∫µn (built-in object) d√πng ƒë·ªÉ th·ª±c hi·ªán c√°c ph√©p to√°n h·ªçc nh∆∞: l√†m tr√≤n, t√≠nh m≈©, cƒÉn b·∫≠c hai, sin, cos, s·ªë ng·∫´u nhi√™n, v.v.
  ƒê·∫∑c ƒëi·ªÉm c·ªßa Math Object
    Kh√¥ng ph·∫£i l√† m·ªôt constructor: B·∫°n kh√¥ng th·ªÉ t·∫°o m·ªôt th·ªÉ hi·ªán c·ªßa Math b·∫±ng t·ª´ kh√≥a new.
    C√°ch s·ª≠ d·ª•ng: Truy c·∫≠p tr·ª±c ti·∫øp c√°c ph∆∞∆°ng th·ª©c v√† thu·ªôc t√≠nh b·∫±ng c√∫ ph√°p Math.method() ho·∫∑c Math.property.

     üé≤ V√≠ d·ª• s·ª≠ d·ª•ng:
     console.log(Math.PI); // 3.141592653589793
     console.log(Math.PI); // 3.141592653589793
     console.log(Math.round(4.6)); // 5  Math.round(x)	L√†m tr√≤n s·ªë x ƒë·∫øn s·ªë nguy√™n g·∫ßn nh·∫•t. 4.6 g·∫ßn 5 h∆°n n√™n kq l√† 5
     console.log(Math.floor(4.9)); // 4   Math.floor(x)	L√†m tr√≤n xu·ªëng s·ªë nguy√™n g·∫ßn nh·∫•t
     console.log(Math.ceil(4.1)); // 5    Math.ceil(x)	L√†m tr√≤n l√™n s·ªë nguy√™n g·∫ßn nh·∫•t.
     console.log(Math.trunc(4.1)); // 4   Math.trunc(x) C·∫Øt b·ªè ph·∫ßn th·∫≠p ph√¢n, gi·ªØ l·∫°i ph·∫ßn nguy√™n
     console.log(Math.abs(-10)); // 10    Math.abs(x) Tr·∫£ v·ªÅ gi√° tr·ªã tuy·ªát ƒë·ªëi c·ªßa x
     console.log(Math.pow(2, 3)); // 8    Math.pow(x, y) Tr·∫£ v·ªÅ x m≈© y (x^y)
     console.log(Math.sqrt(25)); // 5     Math.sqrt(x)	Tr·∫£ v·ªÅ cƒÉn b·∫≠c hai c·ªßa x
     console.log(Math.max(1, 5, 3)); // 5   Math.max(a, b, ...)	Tr·∫£ v·ªÅ s·ªë l·ªõn nh·∫•t trong danh s√°ch
     console.log(Math.min(1, 5, 3)); // 1   Math.min(a, b, ...)	Tr·∫£ v·ªÅ s·ªë nh·ªè nh·∫•t trong danh s√°ch
     console.log(Math.random());  tr·∫£ v·ªÅ s·ªë ng√£u nhi√™n
     
     üé≤ ·ª®NG D·ª§NG T·∫†O S·ªê NG·∫™U NHI√äN 
     // T·∫°o s·ªë ng·∫´u nhi√™n t·ª´ 0 ƒë·∫øn 9
        let rand = Math.floor(Math.random() * 10);
        console.log(rand);

        // T·∫°o s·ªë ng·∫´u nhi√™n t·ª´ 1 ƒë·∫øn 100
        let rand2 = Math.floor(Math.random() * 100) + 1;
        console.log(rand2);


 üß† toLocaleString() l√† g√¨?
        toLocaleString() l√† m·ªôt ph∆∞∆°ng th·ª©c d√πng ƒë·ªÉ ƒë·ªãnh d·∫°ng s·ªë ho·∫∑c ng√†y theo ng√¥n ng·ªØ (locale) c·ªßa b·∫°n ‚Äî v√≠ d·ª• nh∆∞ hi·ªÉn th·ªã s·ªë theo ki·ªÉu Vi·ªát Nam (25.000) hay ki·ªÉu M·ªπ (25,000).

     üî¢ C√°ch d√πng v·ªõi s·ªë (Number):
        üìå C√∫ ph√°p c∆° b·∫£n:  number.toLocaleString([locales], [options])

        locales: l√† m√£ ng√¥n ng·ªØ nh∆∞ vi-VN (Vi·ªát Nam), en-US (M·ªπ),...
        options: l√† c√°c tu·ª≥ ch·ªçn ƒë·ªÉ ƒë·ªãnh d·∫°ng s√¢u h∆°n (nh∆∞ ki·ªÉu ti·ªÅn t·ªá, s·ªë th·∫≠p ph√¢n,...)

        ‚úÖ V√≠ d·ª• 1: Format s·ªë ki·ªÉu Vi·ªát Nam
        let x = 25000;
        console.log(x.toLocaleString('vi-VN')); 
        // üëâ K·∫øt qu·∫£: "25.000"

        ‚úÖ V√≠ d·ª• 2: Format s·ªë ki·ªÉu M·ªπ
        let x = 25000;
        console.log(x.toLocaleString('en-US')); 
        // üëâ K·∫øt qu·∫£: "25,000"

        üí∞ Format th√†nh ki·ªÉu ti·ªÅn t·ªá
        let price = 25000;

         console.log(price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }));
            // üëâ "25.000¬†‚Ç´"

         console.log(price.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
            // üëâ "$25,000.00"





üß∞ ‚úÖKi·ªÉu d·ªØ li·ªáu Boolean.
    Boolean l√† m·ªôt ki·ªÉu d·ªØ li·ªáu ch·ªâ c√≥ 2 gi√° tr·ªã duy nh·∫•t:

    ‚úÖ true (ƒë√∫ng)
    
    ‚ùå false (sai)
    
    Boolean th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ:
    Ki·ªÉm tra ƒëi·ªÅu ki·ªán trong c√°c c·∫•u tr√∫c ƒëi·ªÅu khi·ªÉn (nh∆∞ if, while).
    ƒê·∫°i di·ªán cho tr·∫°ng th√°i b·∫≠t/t·∫Øt, ƒë√∫ng/sai, c√≥/kh√¥ng trong ·ª©ng d·ª•ng.

    ‚úÖvd1. So s√°nh s·ªë:    
    let a = 5;
    let b = 10;
    console.log(a < b);  // üëâ K·∫øt qu·∫£: true (v√¨ 5 nh·ªè h∆°n 10)

    ‚úÖvd2. Ki·ªÉm tra ƒëi·ªÅu ki·ªán:
    let isRaining = true;

    if (isRaining) {
        console.log("Mang theo √¥ nh√©!");
    } else {
        console.log("Tr·ªùi ƒë·∫πp, kh√¥ng c·∫ßn √¥.");
    }

    ‚úÖ V√≠ d·ª• 3: Ki·ªÉm tra m·∫≠t kh·∫©u
    let inputPassword = "123456";
    let correctPassword = "123456";

    let isCorrect = inputPassword === correctPassword;
    let nonCorrect = inputPassword !== correctPassword;


    console.log("M·∫≠t kh·∫©u ƒë√∫ng kh√¥ng?", isCorrect); // üëâ true
    console.log("M·∫≠t kh·∫©u Kh√¥ng ƒë√∫ng?", nonCorrect);// üëâ flase



 üß∞ ‚úÖSO S√ÅNH B·∫∞NG V√Ä TUY·ªÜT ƒê·ªêI   
    üî∏ == (so s√°nh b·∫±ng, l·ªèng l·∫ªo)   
    So s√°nh gi√° tr·ªã, b·ªè qua ki·ªÉu d·ªØ li·ªáu.
    JavaScript s·∫Ω t·ª± chuy·ªÉn ƒë·ªïi ki·ªÉu (type coercion) n·∫øu c·∫ßn.
    üî∏ V√≠ d·ª•:
    5 == "5"      // üëâ true (s·ªë 5 == chu·ªói "5")
    0 == false    // üëâ true
    null == undefined // üëâ true
    üî∏ === (so s√°nh b·∫±ng, nghi√™m ng·∫∑t)
    So s√°nh c·∫£ gi√° tr·ªã v√† ki·ªÉu d·ªØ li·ªáu
    Kh√¥ng t·ª± ƒë·ªông chuy·ªÉn ƒë·ªïi g√¨ c·∫£
    üî∏ V√≠ d·ª•:
    5 === "5"     // üëâ false (s·ªë kh√°c chu·ªói)
    0 === false   // üëâ false (s·ªë kh√°c Boolean)
    null === undefined // üëâ false




üü¢ üß∞ ‚úÖ  Conditional statement ƒêI·ªÄU KI·ªÜN R·∫º NH√ÅNH

    üü¢ Conditional Statement l√† g√¨?
    üëâ L√† c√¢u l·ªánh d√πng ƒë·ªÉ ra quy·∫øt ƒë·ªãnh trong l·∫≠p tr√¨nh.
    N√≥ gi·ªëng nh∆∞ b·∫°n h·ªèi:

    ‚ÄúN·∫øu ƒëi·ªÅu n√†y ƒë√∫ng, th√¨ l√†m g√¨ ƒë√≥?‚Äù
    ‚úÖ V√≠ d·ª• ƒë∆°n gi·∫£n:
    let age = 18;

    if (age >= 18) {
        console.log("B·∫°n ƒë·ªß tu·ªïi l√°i xe!");
    } else {
        console.log("B·∫°n ch∆∞a ƒë·ªß tu·ªïi l√°i xe.");
    }

    üîπ C√≥ th·ªÉ c√≥ nhi·ªÅu ƒëi·ªÅu ki·ªán (else if):
    let score = 7;

    if (score >= 8) {
        console.log("H·ªçc sinh gi·ªèi");
    } else if (score >= 6.5) {
        console.log("H·ªçc sinh kh√°");
    } else {
        console.log("H·ªçc sinh trung b√¨nh");
    }


    let animal = prompt("nhap con vat yeu th√≠ch");
    if (animal === `dog`) {
        console.log(`Gau Gau`);
    } else if (animal === `duck`) {
        console.log(`cap cap`)
    } else if (animal === `cat`) {
        console.log(`Meo Meo`)
    } else {
        console.log("Xin loi chung toi khong co")
    }


üü¢ To√°n t·ª≠ 3 ng√¥i
    To√°n t·ª≠ 3 ng√¥i l√† m·ªôt c√°ch vi·∫øt ng·∫Øn g·ªçn c·ªßa c√¢u l·ªánh if...else
    N√≥ c√≥ 3 ph·∫ßn, v√¨ v·∫≠y g·ªçi l√† ‚Äú3 ng√¥i‚Äù.
    üîπ C√∫ ph√°p: ƒëi·ªÅu_ki·ªán ? gi√°_tr·ªã_n·∫øu_ƒë√∫ng : gi√°_tr·ªã_n·∫øu_sai;
    üìå V√≠ d·ª• ƒë∆°n gi·∫£n:
    C√ÅCH VI·∫æT TH∆Ø·ªúNG V·ªöI IF ELSE:
    let age = 18;
    let message;
    if (age >= 18) {
        message = "ƒê·ªß tu·ªïi";
    } else {
        message = "Ch∆∞a ƒë·ªß tu·ªïi";
    }
    console.log(message);

    üìåGi·ªù vi·∫øt b·∫±ng to√°n t·ª≠ 3 ng√¥i:
    let age = 18;
    let message = age >= 18 ? "ƒê·ªß tu·ªïi" : "Ch∆∞a ƒê·ªß Tu·ªïi";
    console.log(message);

    üéØ Khi n√†o d√πng?
    Khi b·∫°n c√≥ c√¢u if-else ƒë∆°n gi·∫£n

    B·∫°n mu·ªën vi·∫øt g·ªçn v√† nhanh


üü¢ Logical Operators (To√°n t·ª≠ logic) trong JavaScript
    üëâ ƒê√¢y l√† c√°c to√°n t·ª≠ d√πng ƒë·ªÉ ki·ªÉm tra nhi·ªÅu ƒëi·ªÅu ki·ªán c√πng l√∫c
    (gi·ªëng nh∆∞ n√≥i: "ƒë√∫ng c·∫£ 2", ho·∫∑c "ch·ªâ c·∫ßn 1 c√°i ƒë√∫ng", ho·∫∑c "ng∆∞·ª£c l·∫°i")

    C√°c to√°n t·ª≠ logic ch√≠nh
    üìå1.To√°n T·ª≠ AND (&&)
    To√°n t·ª≠ && tr·∫£ v·ªÅ true n·∫øu t·∫•t c·∫£ c√°c bi·ªÉu th·ª©c ƒë·ªÅu ƒë√∫ng.
    N·∫øu m·ªôt bi·ªÉu th·ª©c l√† false, n√≥ s·∫Ω d·ª´ng l·∫°i v√† tr·∫£ v·ªÅ false ngay l·∫≠p t·ª©c.
        
    vd: 
    let age = 20;
    let hasID = true;
        if (age >= 18 && hasID) {
        console.log("B·∫°n ƒë∆∞·ª£c v√†o r·∫°p chi·∫øu phim");
    }
    üëâ C·∫£ 2 ƒëi·ªÅu ki·ªán ph·∫£i ƒë√∫ng th√¨ m·ªõi cho v√†o.

üßë‚Äçüíª    ‚úÖ Code minh ho·∫° ƒë∆°n gi·∫£n:
    let username = prompt("Nh·∫≠p t√™n ƒëƒÉng nh·∫≠p:");
    let password = prompt("Nh·∫≠p m·∫≠t kh·∫©u:");
    
    // T√†i kho·∫£n ƒë√∫ng l√†: admin / 123456
    if (username === "admin" && password === "123456") {
        console.log("ƒêƒÉng nh·∫≠p th√†nh c√¥ng ‚úÖ");
    } else {
        console.log("T√™n ƒëƒÉng nh·∫≠p ho·∫∑c m·∫≠t kh·∫©u sai ‚ùå");
    }
 


    üìå2. || (OR ‚Äì ho·∫∑c)
    To√°n t·ª≠ || tr·∫£ v·ªÅ true n·∫øu √≠t nh·∫•t m·ªôt bi·ªÉu th·ª©c ƒë√∫ng.
    N·∫øu m·ªôt bi·ªÉu th·ª©c l√† true, n√≥ s·∫Ω d·ª´ng l·∫°i v√† tr·∫£ v·ªÅ true ngay l·∫≠p t·ª©c.

    let isWeekend = true;
    let isHoliday = false;
    if (isWeekend || isHoliday) {
        console.log("B·∫°n ƒë∆∞·ª£c ngh·ªâ!");
    }

    ‚úÖ Th√™m v√≠ d·ª• d√πng || (ƒëƒÉng nh·∫≠p b·∫±ng 1 trong 2 c√°ch)
        let user = prompt("Nh·∫≠p t√†i kho·∫£n ho·∫∑c email:");

        if (user === "admin" || user === "admin@gmail.com") {
            console.log("T√†i kho·∫£n h·ª£p l·ªá");
        } else {
            console.log("Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n");
        }
        üëâ   Cho ph√©p ƒëƒÉng nh·∫≠p b·∫±ng t√†i kho·∫£n ho·∫∑c email


    üìå. ! (NOT ‚Äì ph·ªß ƒë·ªãnh)
    To√°n t·ª≠ ! ƒë·∫£o ng∆∞·ª£c gi√° tr·ªã logic.
    N·∫øu m·ªôt bi·ªÉu th·ª©c l√† true, ! s·∫Ω bi·∫øn n√≥ th√†nh false, v√† ng∆∞·ª£c l·∫°i.

    ‚úÖüî¥ D√πng ! ƒë·ªÉ ki·ªÉm tra ng∆∞·ªùi d√πng ch∆∞a nh·∫≠p g√¨
    let username = prompt("Nh·∫≠p t√™n ƒëƒÉng nh·∫≠p:");
    if (!username) {
        console.log("B·∫°n ch∆∞a nh·∫≠p t√†i kho·∫£n!");
    }
    

    üî¥ üî• ƒê·ªô ∆∞u ti√™n (Precedence) c·ªßa c√°c to√°n t·ª≠ logic

    To√°n t·ª≠ ! c√≥ m·ª©c ∆∞u ti√™n cao nh·∫•t.
    Sau ƒë√≥ ƒë·∫øn to√°n t·ª≠ &&.
    To√°n t·ª≠ || c√≥ m·ª©c ∆∞u ti√™n th·∫•p nh·∫•t
    üîç V√≠ d·ª• minh h·ªça: 

    true || false && false
üßë‚ÄçüíªV√ç D·ª§ TH·ª∞C T·∫æ:

    let username = "Alice";
    let password = "123456";
    let email = "alice@example.com";

// Ki·ªÉm tra t·∫•t c·∫£ c√°c th√¥ng tin ƒë·ªÅu ƒë∆∞·ª£c nh·∫≠p v√† kh√¥ng r·ªóng
if (username && password && email) {
  console.log("ƒêƒÉng k√Ω th√†nh c√¥ng!");
} else {
  console.log("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
}


üßë‚Äçüíª VD th·ª±c t·∫ø:
    let userInput = "";
    // N·∫øu userInput l√† falsy (v√≠ d·ª• chu·ªói r·ªóng), th√¨ g√°n gi√° tr·ªã "Guest"
    let usernameDisplay = userInput || "Guest";
    console.log(usernameDisplay); // üëâ "Guest"

       V√≠ d·ª• 2: D√πng !
    !false && true
    üëâ ∆Øu ti√™n:
    !false ‚Üí true
    true && true ‚Üí true
    ‚úÖ K·∫øt qu·∫£: true

 üßë‚Äçüíª VD th·ª±c t·∫ø:  
 
 let isLoggedIn = false;
    if (!isLoggedIn) {
      console.log("Ng∆∞·ªùi d√πng ch∆∞a ƒëƒÉng nh·∫≠p."); // S·∫Ω in ra d√≤ng n√†y v√¨ !false = true
    }
    
    üëâ Theo th·ª© t·ª± ∆∞u ti√™n:
    false && false ch·∫°y tr∆∞·ªõc ‚Üí k·∫øt qu·∫£: false
    true || false ‚Üí k·∫øt qu·∫£: true
    ‚úÖ K·∫øt qu·∫£ cu·ªëi c√πng: true

    üìå N·∫øu b·∫°n mu·ªën ki·ªÉm so√°t th·ª© t·ª± r√µ r√†ng, n√™n d√πng d·∫•u ngo·∫∑c ().
    true || (false && false)   // üëâ k·∫øt qu·∫£: true
    (true || false) && false   // üëâ k·∫øt qu·∫£: false


‚úÖüî¥ üßë‚Äçüíª·ª©ng d·ª•ng th·ª±c t·∫ø 

let userAccount = {
    username: "Alice",
    password: "secret"
  };
  
  let inputUsername = "Alice";
  let inputPassword = "secret";
  
  if (inputUsername === userAccount.username && inputPassword === userAccount.password) {
    console.log("ƒêƒÉng nh·∫≠p th√†nh c√¥ng!");
  } else {
    console.log("T√™n ƒëƒÉng nh·∫≠p ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng!");
  }
  



  ‚úÖüî¥ C√¢u l·ªánh switch-case
  Switch/case l√† m·ªôt c·∫•u tr√∫c ƒëi·ªÅu ki·ªán r·∫Ω nh√°nh trong l·∫≠p tr√¨nh, d√πng ƒë·ªÉ ki·ªÉm tra gi√° tr·ªã c·ªßa m·ªôt bi·∫øn v√† th·ª±c hi·ªán c√°c h√†nh ƒë·ªông kh√°c nhau t√πy theo gi√° tr·ªã ƒë√≥. N√≥ gi·ªëng nh∆∞ nhi·ªÅu c√¢u l·ªánh if...else if, nh∆∞ng g·ªçn g√†ng v√† d·ªÖ ƒë·ªçc h∆°n khi b·∫°n c·∫ßn so s√°nh m·ªôt bi·∫øn v·ªõi nhi·ªÅu gi√° tr·ªã c·ª• th·ªÉ.

  üìå V√≠ d·ª• d·ªÖ hi·ªÉu:

    let ngay = 3;

    switch (ngay) {
    case 1:
        console.log("Ch·ªß Nh·∫≠t");
        break;
    case 2:
        console.log("Th·ª© Hai");
        break;
    case 3:
        console.log("Th·ª© Ba");
        break;
    default:
        console.log("Kh√¥ng r√µ ng√†y");
    }


    üß† Gi·∫£i th√≠ch t·ª´ng ph·∫ßn:
        switch (bi·∫øn) ‚Äì ki·ªÉm tra gi√° tr·ªã c·ªßa bi·∫øn.

        case ‚Äì l√† t·ª´ng tr∆∞·ªùng h·ª£p c·ª• th·ªÉ.

        break ‚Äì tho√°t kh·ªèi switch sau khi ch·∫°y xong m·ªôt case (n·∫øu kh√¥ng c√≥, n√≥ s·∫Ω ch·∫°y ti·∫øp c√°c case d∆∞·ªõi).

        default ‚Äì gi·ªëng nh∆∞ else, d√πng khi kh√¥ng kh·ªõp v·ªõi case n√†o.

  ‚úÖ 1. Nhi·ªÅu case c√≥ th·ªÉ chia s·∫ª chung m·ªôt kh·ªëi m√£
  üìå V√≠ d·ª•:.

    let diem = "A";

    switch (diem) {
    case "A":
    case "A+":
    case "A-":
        console.log("B·∫°n h·ªçc r·∫•t gi·ªèi!");
        break;
    case "B":
        console.log("B·∫°n h·ªçc kh√°!");
        break;
    default:
        console.log("C·∫ßn c·ªë g·∫Øng h∆°n!");
    }
 ‚úÖ 2. default kh√¥ng b·∫Øt bu·ªôc ph·∫£i l√† cu·ªëi c√πng
 
 M·∫∑c d√π th√¥ng th∆∞·ªùng b·∫°n th·∫•y default ·ªü cu·ªëi, nh∆∞ng th·∫≠t ra b·∫°n c√≥ th·ªÉ ƒë·∫∑t n√≥ ·ªü b·∫•t k·ª≥ ƒë√¢u trong switch, mi·ªÖn l√† b·∫°n x·ª≠ l√Ω ƒë√∫ng.

    üìå V√≠ d·ª•:

    let x = 10;

    switch (x) {
    default:
        console.log("Kh√¥ng kh·ªõp case n√†o c·∫£!");
        break;
    case 5:
        console.log("Gi√° tr·ªã l√† 5");
        break;
    case 10:
        console.log("Gi√° tr·ªã l√† 10");
        break;
    }





‚úÖüî¥   Truthy vs Falsy trong javascript
    Falsy values
        "Falsy" l√† nh·ªØng gi√° tr·ªã ƒë∆∞·ª£c chuy·ªÉn ƒë·ªïi th√†nh false khi ƒë√°nh gi√° trong ng·ªØ c·∫£nh Boolean. C√≥ 6 gi√° tr·ªã ƒë∆∞·ª£c coi l√† falsy:
        false (gi√° tr·ªã Boolean false)
        0 (s·ªë kh√¥ng)
        -0 (√¢m s·ªë kh√¥ng)
        "" ho·∫∑c '' (chu·ªói r·ªóng)
        null (gi√° tr·ªã r·ªóng)
        undefined (gi√° tr·ªã ch∆∞a ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a)
        NaN (Not-a-Number)

        ‚úÖ V√≠ d·ª•:
        if ("Hello") {
            console.log("ƒê√¢y l√† truthy");  // ‚úÖ ch·∫°y
          }
          
          if (0) {
            console.log("ƒê√¢y l√† truthy");  // ‚ùå KH√îNG ch·∫°y
          } else {
            console.log("ƒê√¢y l√† falsy");   // ‚úÖ ch·∫°y
          }
          

          VD kh√°c: 
          let ten = "";  // falsy
            if (!ten) {
            console.log("T√™n ƒëang tr·ªëng!");
            }

            ‚úÖ Di·ªÖn gi·∫£i:
            ten ƒë∆∞·ª£c g√°n l√† "" (chu·ªói r·ªóng) ‚Üí ƒë√¢y l√† falsy.

            Trong if (!ten):

            !ten c√≥ nghƒ©a l√† ph·ªß ƒë·ªãnh l·∫°i gi√° tr·ªã c·ªßa ten.

            V√¨ ten l√† falsy ‚Üí !ten s·∫Ω th√†nh true.

            K·∫øt qu·∫£: ƒëi·ªÅu ki·ªán ƒë√∫ng ‚Üí in ra d√≤ng "T√™n ƒëang tr·ªëng!"
            ‚úÖ √ù nghƒ©a th·ª±c t·∫ø:
            Khi b·∫°n mu·ªën ki·ªÉm tra m·ªôt √¥ input b·ªã b·ªè tr·ªëng, b·∫°n ch·ªâ c·∫ßn:
            if (!inputValue) {
                console.log("B·∫°n ch∆∞a nh·∫≠p g√¨ c·∫£!");
              }
              

              VD KH√ÅC: 
              let diem = 0;  // falsy
                if (diem || diem === 0) {
                console.log("C√≥ ƒëi·ªÉm h·ª£p l·ªá!"); 
                }

                ‚úÖ Di·ªÖn gi·∫£i:
                diem = 0 ‚Üí l√† falsy.
                if (diem || diem === 0) nghƒ©a l√†:
                N·∫øu diem l√† truthy ‚Üí ch·∫°y.
                N·∫øu diem l√† falsy, th√¨ ki·ªÉm tra th√™m: diem === 0 ‚Üí c√≥ ƒë√∫ng kh√¥ng?
                ·ªû ƒë√¢y diem === 0 l√† ƒë√∫ng, n√™n c·∫£ bi·ªÉu th·ª©c (diem || diem === 0) tr·∫£ v·ªÅ true.

                ‚úÖ K·∫øt qu·∫£: In ra "C√≥ ƒëi·ªÉm h·ª£p l·ªá!"
                ‚úÖ T·∫°i sao c·∫ßn vi·∫øt nh∆∞ v·∫≠y?
                V√¨ 0 l√† falsy, n√™n n·∫øu ch·ªâ vi·∫øt:
                            if (diem) {
                                console.log("C√≥ ƒëi·ªÉm");
                            }
                ‚Üí s·∫Ω kh√¥ng ch·∫°y khi diem = 0, m·∫∑c d√π 0 l√† gi√° tr·ªã h·ª£p l·ªá.
                ‚û°Ô∏è Do ƒë√≥, b·∫°n c·∫ßn th√™m || diem === 0 ƒë·ªÉ v·∫´n ch·∫•p nh·∫≠n ƒëi·ªÉm b·∫±ng 0.            




  ‚úÖüî¥V√íNG L·∫∂P FOR...LOOP trong Javascript
  Okay, gi·ªù m√¨nh c√πng t√¨m hi·ªÉu v·ªÅ v√≤ng l·∫∑p for trong JavaScript nh√©! ƒê√¢y l√† m·ªôt trong nh·ªØng c·∫•u tr√∫c l·∫∑p ph·ªï bi·∫øn nh·∫•t ƒë·ªÉ ch·∫°y ƒëi ch·∫°y l·∫°i m·ªôt ƒëo·∫°n code nhi·ªÅu l·∫ßn, nh·∫•t l√† khi b·∫°n bi·∫øt s·ªë l·∫ßn l·∫∑p.
        ‚úÖ C√∫ ph√°p for c∆° b·∫£n:        
        for (kh·ªüi_t·∫°o; ƒëi·ªÅu_ki·ªán; c·∫≠p_nh·∫≠t) {
            // kh·ªëi l·ªánh s·∫Ω ch·∫°y m·ªói v√≤ng l·∫∑p
          }
          üß† Gi·∫£i th√≠ch t·ª´ng ph·∫ßn:    
          for (let i = 0; i < 5; i++) {
            console.log("L·∫ßn l·∫∑p th·ª©", i);
          }

          let i = 0	Kh·ªüi t·∫°o bi·∫øn ƒë·∫øm i b·∫Øt ƒë·∫ßu t·ª´ 0
          i < 5	ƒêi·ªÅu ki·ªán ƒë·ªÉ ti·∫øp t·ª•c l·∫∑p (n·∫øu sai th√¨ d·ª´ng)
          i++	TƒÉng i sau m·ªói v√≤ng l·∫∑p (i = i + 1)
          console.log()	L·ªánh ƒë∆∞·ª£c ch·∫°y trong m·ªói l·∫ßn l·∫∑p         
          üßæ K·∫øt qu·∫£:
        L·∫ßn l·∫∑p th·ª© 0
        L·∫ßn l·∫∑p th·ª© 1
        L·∫ßn l·∫∑p th·ª© 2
        L·∫ßn l·∫∑p th·ª© 3
        L·∫ßn l·∫∑p th·ª© 4

        üéØ V√≠ d·ª• th·ª±c t·∫ø
        1. In ra c√°c s·ªë t·ª´ 1 ƒë·∫øn 10:
        for (let i = 1; i <= 10; i++) {
            console.log(i);
          }
          
         2. T√≠nh t·ªïng t·ª´ 1 ƒë·∫øn 100: 
         let tong = 0;
         for (let i = 1; i <= 100; i++) {
           tong += i;        // üëâ ƒê√¢y l√† c√°ch vi·∫øt r√∫t g·ªçn c·ªßa: tong = tong + i.           
         }
         console.log("T·ªïng l√†:", tong);
        i	tong (sau c·ªông)
        1	0 + 1 = 1
        2	1 + 2 = 3
        3	3 + 3 = 6
        4	6 + 4 = 10
        ...	...
        100	4950 + 100 = 5050

        3. Duy·ªát qua m·∫£ng:
        let fruits = ["T√°o", "Chu·ªëi", "Cam"];
        for (let i = 0; i < fruits.length; i++) {    //i < fruits.length: L·∫∑p cho ƒë·∫øn khi i nh·ªè h∆°n ƒë·ªô d√†i c·ªßa m·∫£ng. fruits.length l√† 3, v√¨ c√≥ 3 ph·∫ßn t·ª≠.
          console.log(fruits[i]);
        }
        

        ‚úÖ 4. Vi·∫øt l·∫°i b·∫±ng for...of
        let fruits = ["T√°o", "Chu·ªëi", "Cam"];
        for (let fruit of fruits) {
          console.log(fruit);
        }
        üîç Gi·∫£i th√≠ch:
        fruit l√† bi·∫øn ƒë·∫°i di·ªán cho t·ª´ng ph·∫ßn t·ª≠ trong m·∫£ng fruits.
        M·ªói l·∫ßn l·∫∑p, bi·∫øn fruit s·∫Ω l·∫ßn l∆∞·ª£t nh·∫≠n c√°c gi√° tr·ªã: "T√°o", "Chu·ªëi", "Cam".
        üìå C√°ch n√†y ng·∫Øn g·ªçn v√† d·ªÖ ƒë·ªçc h∆°n so v·ªõi d√πng ch·ªâ s·ªë i.

        ‚úÖ 5. Ch·ªâ in ra tr√°i c√¢y b·∫Øt ƒë·∫ßu b·∫±ng ch·ªØ "C"
        let fruits = ["T√°o", "Chu·ªëi", "Cam", "Ch√¥m ch√¥m", "·ªîi"];
            for (let fruit of fruits) {
            if (fruit.startsWith("C")) {
                console.log(fruit);
            }
            }
            üîç Gi·∫£i th√≠ch:
            fruit.startsWith("C") ki·ªÉm tra xem chu·ªói c√≥ b·∫Øt ƒë·∫ßu b·∫±ng ch·ªØ "C" kh√¥ng.
            
            N·∫øu c√≥, th√¨ console.log(fruit) s·∫Ω in ra n√≥.


 ‚úÖüî¥üåÄ 1. Infinite Loop ‚Äì v√≤ng l·∫∑p v√¥ h·∫°n üåÄ
 L√† v√≤ng l·∫∑p kh√¥ng bao gi·ªù k·∫øt th√∫c, v√¨ ƒëi·ªÅu ki·ªán l·∫∑p lu√¥n ƒë√∫ng.
 üî• V√≠ d·ª•:
    while (true) {
        console.log("Ch·∫°y ho√†i lu√¥n n√®!");
    }
    ‚ö†Ô∏è C·∫£nh b√°o:
    Nh·ªØng v√≤ng l·∫∑p n√†y c√≥ th·ªÉ l√†m ƒë∆° tr√¨nh duy·ªát ho·∫∑c khi·∫øn ch∆∞∆°ng tr√¨nh b·ªã treo.
    C·∫ßn break ra b·∫±ng ƒëi·ªÅu ki·ªán ho·∫∑c nh·∫•n Ctrl + C n·∫øu ƒëang ch·∫°y trong terminal.

    ‚úÖ Th√™m v√≠ d·ª• th·ª±c t·∫ø c√≥ ƒëi·ªÅu ki·ªán tho√°t:
    let count = 0;
    while (true) {
    console.log("L·∫ßn", count);
    count++;
    if (count > 5) {
        break; // Tho√°t kh·ªèi v√≤ng l·∫∑p
    }
    }



 ‚úÖüîÅ 2. Nested Loop (V√≤ng l·∫∑p l·ªìng nhau)
 L√† v√≤ng l·∫∑p b√™n trong m·ªôt v√≤ng l·∫∑p kh√°c. M·ªói l·∫ßn l·∫∑p c·ªßa v√≤ng ngo√†i ‚Üí v√≤ng trong ch·∫°y to√†n b·ªô.  
 üî• V√≠ d·ª•:      
  for (let i = 1; i <= 3; i++) {
    for (let j = 1; j <= 2; j++) {
      console.log(`i = ${i}, j = ${j}`);
    }
  }
  üßæ K·∫øt qu·∫£:
    i = 1, j = 1
    i = 1, j = 2
    i = 2, j = 1
    i = 2, j = 2
    i = 3, j = 1
    i = 3, j = 2

    üßÆ ·ª®ng d·ª•ng th·ª±c t·∫ø c·ªßa Nested Loop
    ‚úÖ In b·∫£ng c·ª≠u ch∆∞∆°ng:
    for (let i = 2; i <= 9; i++) {
        for (let j = 1; j <= 10; j++) {
          console.log(`${i} √ó ${j} = ${i * j}`);
        }
        console.log("---------");
      }

    Khi i = 2 v√† j = 1, k·∫øt qu·∫£ in ra s·∫Ω l√†: 2 √ó 1 = 2.
    Khi i = 2 v√† j = 2, k·∫øt qu·∫£ in ra s·∫Ω l√†: 2 √ó 2 = 4.
